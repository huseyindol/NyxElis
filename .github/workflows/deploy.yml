name: Deploy to AWS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Prepare Docker context
        run: |
          mkdir -p docker-context
          cp target/starter-0.0.1-SNAPSHOT.jar docker-context/app.jar
          cp Dockerfile docker-context/

      - name: Build Docker image
        run: docker build -t nyxelis-api docker-context/

      - name: Save Docker image
        run: docker save nyxelis-api:latest -o nyxelis-api.tar

      - name: Copy image to AWS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "nyxelis-api.tar"
          target: "/home/ec2-user/"

      - name: Deploy on AWS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            # 1. Image dosyasını Docker'a yükle
            docker load -i /home/ec2-user/nyxelis-api.tar
            rm /home/ec2-user/nyxelis-api.tar
  
            # 2. Proje dizinine git
            cd /home/ec2-user/NyxElis
            
            # 3. Eski container'ı durdur ve kaldır (varsa)
            docker-compose stop nyxelis-api 2>/dev/null || true
            docker-compose rm -f nyxelis-api 2>/dev/null || true
            
            # 4. Yeni image ile container'ı başlat
            docker-compose up -d nyxelis-api
            
            # 5. Logları kontrol et
            docker-compose logs --tail=50 nyxelis-api