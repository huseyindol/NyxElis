name: Deploy to AWS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      - name: Build Docker image
        run: docker build -t nyxelis-api .

      - name: Save Docker image
        run: docker save nyxelis-api:latest -o nyxelis-api.tar

      - name: Copy image to AWS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "nyxelis-api.tar"
          target: "/home/ec2-user/"

      - name: Deploy on AWS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH_KEY }}
          # Script, sunucunuzdaki docker-compose.yml ve .env.docker'ın
          # bulunduğu dizinde çalıştırılmalıdır (Örn: /home/ec2-user/NyxElis)
          script: |
            # 1. Image dosyasını Docker'a yükle
            docker load -i /home/ec2-user/nyxelis-api.tar
            rm /home/ec2-user/nyxelis-api.tar

            # 2. Eski Container'ları durdur (Postgres hariç) ve yeni image ile sistemi yeniden başlat
            # Bu komut, sadece nyxelis-api servisini günceller ve yeniden başlatır. 
            # postgres-db zaten ayakta kalır ve verileri kaybetmez.
            docker-compose up -d --build nyxelis-api